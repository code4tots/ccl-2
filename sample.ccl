# cls && javac -Xlint Easy.java TestEasy.java && java -ea Easy sample.ccl

x = 5
assert[x == 5, "x == 5"]
assert[x + 6 == 11, "x + 6 == 11"]
assert[-x == -5, "-x == -5"]
assert[List[1, 2, 3] == List[1, 2, 3], "List[1, 2, 3] id test"]

assert[r'a' == "a", "String equality 1"]
assert["a" == 'a', 'String equality 2']

xs = List[1, 2, 3]
assert[xs.map[\x. x + 1] == List[2, 3, 4], "List.map test"]

if 1 + 1 == 2 {
  x = "true"
} else {
  x = "false"
}
assert[x == "true", "if-else test"]

x = 0
if 1 + 1 == 2 {
  x = 1
}
assert[x == 1, "if test"]

x = 10
if 1 + 1 != 2 {
  x = 20
}
assert[x == 10, "not if test"]

def g[a] {
  a + 2
}
assert[g[1] == 3, "def test"]

assert[not false, "not test"]

class MyClass {

  self.__new__ = \ . {
    it = Object[self]
    it.attr = 5
    it
  }

  def my_method[] {
    "My method"
  }

  def other_method[*args] {
    args
  }
}
x = MyClass[]

assert[x.attr == 5, "User defined class attribute test"]

assert[x.my_method[] == "My method", "User defined method test"]

xs = List["b", 6]

assert[
    x.other_method["a", 5, *xs] == List['a', 5, 'b', 6],
    "Vararg test"]

assert[Class == Class, "Class == Class"]

# Inheritance test
class MyOtherClass[MyClass] {
  def other_method[] {
    "other_method"
  }
}
x = MyOtherClass[]
assert[
    x.__class__[].__str__[] == "<class MyOtherClass>",
    "Class name check: " + x.__class__[].__str__[]]
assert[x.attr == 5, "Constructor inheritance"]
assert[x.my_method[] == "My method", "Method inheritance"]
assert[
    x.other_method[] == "other_method",
    "Method override: " + x.other_method[].__str__[]]

class NewClass {}
x = NewClass[]
assert[x.__str__[] == "<NewClass instance>", "default __str__"]


r""" # Some possible future additions

# get the maximum file size 
shell['cat file.txt'].lines[].map[\line.line.size[]].max[]

# or maybe

read['file.txt'].lines[].map[&size[]].max[]

"""

print["All tests pass!"]

