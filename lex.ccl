# lex.ccl
# Port of lex.py to ccl


class Origin

  var filespec : String
  var string : String
  var position : Number

  method LocationMessage()
    return 'in %s on line %d column %d\n%s\n%s*\n'.Format([
        this.filespec,
        this.LineNumber(),
        this.ColumnNumber(),
        this.Line(),
        ' '.Multiply(this.ColumnNumber().Subtract(1)),
    ])

  method LineNumber()
    var i
    var total
    i = 0
    total = 0
    while i.LessThan(this.position)
      if this.string.Get(i).Equals('\n')
        total = total.Add(1)
      i = i.Add(1)
    return total

  method ColumnNumber()
    return (1).Add(this.position).Subtract(this.LineStart())

  method Line()
    return this.string.Slice(this.LineStart(), this.LineEnd())

  method LineStart()
    var i
    i = this.position
    while i.GreaterThanOrEqualTo(0)
      if this.string.Get(i).Equals('\n')
        break
      i = i.Subtract(1)
    return i.Add(1)

  method LineEnd()
    var i
    i = 0
    while i.LessThan(this.position)
      if this.string.Get(i).Equals('\n')
        break
      i = i.Add(1)
    return i


class Token

  var type : String
  var value
  var origin : Origin


class LexError

  var message : String
  var origin : Origin

  method ToString()
    return this.message.Add('\n').Add(this.origin.LocationMessage())


class Lexer

  var tokens : List
  var depth : Number
  var string : String
  var filespec : String
  var position : Number
  var mark : Number
  var indent_stack : List

  method __New__(string, filespec)
    this.tokens = []
    this.depth = 0
    this.string = string
    this.position = 0
    this.indent_stack = ['']
    this.filespec = filespec
    return nil

  method GetSymbols()
    return [
      '.',
      '(', ')', '[', ']',
      '=', ':',
      ';', ',',
    ]

  method GetKeywords()
    return [
      'pass',
      'class', 'method',
      'while', 'break', 'continue',
      'if', 'else',
      'return',
      'var',
    ]

  method MakeOrigin()
    return Origin(this.filespec, this.string, this.mark)

  method MakeToken(type, value)
    return Token(type, value, this.MakeOrigin())

  method Lex()
    return nil

