"""rt/core_prelude.ccl"""

"""Assign names to all the 'Meta' objects."""
Value@name = "Value"
Meta@name = "Meta"
Module@name = "Module"
Nil@name = "Nil"
Bool@name = "Bool"
Number@name = "Number"
Text@name = "Text"
List@name = "List"
UserFunction@name = "UserFunction"
BuiltinFunction@name = "BuiltinFunction"

"""Add methods that can be implemented in the language itself."""
Value@str = \. self.repr[]
Value@__bool__ = \\. true
Value@__ne__ = \ other. not (self == other)
Module@repr = \. '<module "%s">' % L[self@__name__]
Nil@repr = \\. 'nil'
Nil@__bool__ = \\. false
Bool@repr = \. if self 'true' else 'false'
Bool@__bool__ = \. self
Number@__bool__ = \. self != 0
Text@str = \. self
Text@repr = \. '"' + self + '"' # TODO: Smarter Text repr.
Text@__add__ = \ other. "%s%s" % L[self, other]
Text@__bool__ = \. self != ''
UserFunction@repr = \. '<user-function>'

"""Set up static inheritance."""
Meta.extends[Value]
Module.extends[Value]
Nil.extends[Value]
Bool.extends[Value]
Number.extends[Value]
Text.extends[Value]
List.extends[Value]
UserFunction.extends[Value]
BuiltinFunction.extends[Value]

"""Misc helper functions."""
global['assert'] = \\cond /msg. {
  msg = msg or 'assertion err'
  if not cond
    err[msg]
}

